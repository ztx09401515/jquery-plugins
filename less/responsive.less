
@xs-width:480px;
@sm-width:768px;
@md-width:992px;
@lg-width:1200px;

@screenRule:@sm-width,@md-width,@lg-width;


@media screen and (max-width:@sm-width){}
@sm:'@media screen and (min-width:@{sm-width})';
@md:'screen and (min-width:#{@md-width})';
@lg:'screen and (min-width:#{@lg-width})';
@sc:screen;
@mdm:'screen and (max-width:#{@md-width})';
@lgm:'screen and (max-width:#{@lg-width})';

@import url(listutil.less);

//API width
.rWidthParams(@vlist){
	@nlist:polisthead(@vlist,4);
	.rWidthParams-internal(@nlist;1);
}
.rWidthParams-internal(@vlist;@index) when(@index<=length(@vlist)){
	.rWidthParam(@index;extract(@vlist, @index));
	.rWidthParams-internal(@vlist;@index + 1);

}
.rWidthParam(@level;@value)when (@level=1) and (@value>0px){
	@media screen and(max-width:(extract(@screenRule,@level))){
		width: @value;
	}
}
.rWidthParam(@level;@value)when (@level=1) and (@value<=0px){
	@media screen and(max-width:(extract(@screenRule, @level))){
			display:none;
	}

}
.rWidthParam(@level;@value)when (@level>1) and ( @level < 5)and (@value>0px){

	@media screen and(min-width:(extract(@screenRule,@level - 1))){
			width: @value;
	}

}
.rWidthParam(@level;@value)when (@level>1) and ( @level < 5) and (@value<=0px){
	@media screen and(max-width:(extract(@screenRule,@level))){
		display:none;
	}

}
.rParams(@style;@vlist){
	@nlist:polisthead(@vlist,4);
	@media @sc and (max-width: @xs-width){
	@{style}:at(@nlist,1);
	}
	@media @sc and (max-width: @sm-width){
			@{style}:at(@nlist,2);
	}
	@media @sc and (max-width: @md-width){
			@{style}:at(@nlist,3);
	}
	@media @sc and (max-width: @lg-width){
			@{style}:at(@nlist,4);
	}
}

